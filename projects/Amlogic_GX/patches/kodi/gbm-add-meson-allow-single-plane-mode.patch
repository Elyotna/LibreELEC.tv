From ecc2f99fc90e32444541ece91b285da3d3df0ce1 Mon Sep 17 00:00:00 2001
From: peak3d <pfau@peak3d.de>
Date: Fri, 9 Feb 2018 10:41:34 +0100
Subject: [PATCH] [GBM] Add meson / allow single plane mode

---
 cmake/platform/linux/gbm.cmake   |  1 +
 xbmc/windowing/gbm/DRMAtomic.cpp |  6 ++--
 xbmc/windowing/gbm/DRMUtils.cpp  | 77 ++++++++++++++++++++++------------------
 3 files changed, 46 insertions(+), 38 deletions(-)

diff --git a/cmake/platform/linux/gbm.cmake b/cmake/platform/linux/gbm.cmake
index 5f5cb8312cb1..d2891665db2b 100644
--- a/cmake/platform/linux/gbm.cmake
+++ b/cmake/platform/linux/gbm.cmake
@@ -1,3 +1,4 @@
 set(PLATFORM_REQUIRED_DEPS OpenGLES EGL GBM LibDRM)
 set(PLATFORM_OPTIONAL_DEPS VAAPI)
 set(APP_RENDER_SYSTEM gles)
+list(APPEND PLATFORM_DEFINES -DMESA_EGL_NO_X11_HEADERS)
diff --git a/xbmc/windowing/gbm/DRMAtomic.cpp b/xbmc/windowing/gbm/DRMAtomic.cpp
index 4361faccae8a..d29c4248d368 100644
--- a/xbmc/windowing/gbm/DRMAtomic.cpp
+++ b/xbmc/windowing/gbm/DRMAtomic.cpp
@@ -143,7 +143,7 @@ void CDRMAtomic::DrmAtomicCommit(int fb_id, int flags, bool rendered, bool video
       return;
     }
 
-    if (!videoLayer)
+    if (!videoLayer && m_overlay_plane->plane)
     {
       // disable overlay plane on modeset
       AddPlaneProperty(m_req, m_overlay_plane, "FB_ID", 0);
@@ -151,7 +151,7 @@ void CDRMAtomic::DrmAtomicCommit(int fb_id, int flags, bool rendered, bool video
     }
   }
 
-  if (videoLayer)
+  if (videoLayer && m_overlay_plane->plane)
     plane = m_overlay_plane;
   else
     plane = m_primary_plane;
@@ -169,7 +169,7 @@ void CDRMAtomic::DrmAtomicCommit(int fb_id, int flags, bool rendered, bool video
     AddPlaneProperty(m_req, plane, "CRTC_W", m_mode->hdisplay);
     AddPlaneProperty(m_req, plane, "CRTC_H", m_mode->vdisplay);
   }
-  else if (videoLayer && !g_windowManager.HasVisibleControls())
+  else if (videoLayer && m_overlay_plane->plane && !g_windowManager.HasVisibleControls())
   {
     // disable gui plane when video layer is active and gui has no visible controls
     AddPlaneProperty(m_req, plane, "FB_ID", 0);
diff --git a/xbmc/windowing/gbm/DRMUtils.cpp b/xbmc/windowing/gbm/DRMUtils.cpp
index 7d0c09a68eb9..a46e9ca819f5 100644
--- a/xbmc/windowing/gbm/DRMUtils.cpp
+++ b/xbmc/windowing/gbm/DRMUtils.cpp
@@ -374,53 +374,59 @@ bool CDRMUtils::GetPlanes()
 
   CLog::Log(LOGDEBUG, "CDRMUtils::%s - primary plane format: %c%c%c%c", __FUNCTION__, fourcc, fourcc >> 8, fourcc >> 16, fourcc >> 24);
 
-  // overlay plane
-  m_overlay_plane->plane = drmModeGetPlane(m_fd, overlay_plane_id);
-  if (!m_overlay_plane->plane)
+  if (overlay_plane_id != 0)
   {
-    CLog::Log(LOGERROR, "CDRMUtils::%s - could not get overlay plane %u: %s", __FUNCTION__, overlay_plane_id, strerror(errno));
-    return false;
-  }
+    // overlay plane
+    m_overlay_plane->plane = drmModeGetPlane(m_fd, overlay_plane_id);
+    if (!m_overlay_plane->plane)
+    {
+      CLog::Log(LOGERROR, "CDRMUtils::%s - could not get overlay plane %u: %s", __FUNCTION__, overlay_plane_id, strerror(errno));
+      return false;
+    }
 
-  m_overlay_plane->props = drmModeObjectGetProperties(m_fd, overlay_plane_id, DRM_MODE_OBJECT_PLANE);
-  if (!m_overlay_plane->props)
-  {
-    CLog::Log(LOGERROR, "CDRMUtils::%s - could not get overlay plane %u properties: %s", __FUNCTION__, overlay_plane_id, strerror(errno));
-    return false;
-  }
+    m_overlay_plane->props = drmModeObjectGetProperties(m_fd, overlay_plane_id, DRM_MODE_OBJECT_PLANE);
+    if (!m_overlay_plane->props)
+    {
+      CLog::Log(LOGERROR, "CDRMUtils::%s - could not get overlay plane %u properties: %s", __FUNCTION__, overlay_plane_id, strerror(errno));
+      return false;
+    }
 
-  m_overlay_plane->props_info = new drmModePropertyPtr[m_overlay_plane->props->count_props];
-  for (uint32_t i = 0; i < m_overlay_plane->props->count_props; i++)
-  {
-    m_overlay_plane->props_info[i] = drmModeGetProperty(m_fd, m_overlay_plane->props->props[i]);
-  }
+    m_overlay_plane->props_info = new drmModePropertyPtr[m_overlay_plane->props->count_props];
+    for (uint32_t i = 0; i < m_overlay_plane->props->count_props; i++)
+    {
+      m_overlay_plane->props_info[i] = drmModeGetProperty(m_fd, m_overlay_plane->props->props[i]);
+    }
 
-  fourcc = 0;
+    fourcc = 0;
 
-  for (uint32_t i = 0; i < m_overlay_plane->plane->count_formats; i++)
-  {
-    /* we want an alpha layer so break if we find one */
-    if (m_overlay_plane->plane->formats[i] == DRM_FORMAT_XRGB8888)
+    for (uint32_t i = 0; i < m_overlay_plane->plane->count_formats; i++)
     {
-      fourcc = DRM_FORMAT_XRGB8888;
-      m_overlay_plane->format = fourcc;
+      /* we want an alpha layer so break if we find one */
+      if (m_overlay_plane->plane->formats[i] == DRM_FORMAT_XRGB8888)
+      {
+        fourcc = DRM_FORMAT_XRGB8888;
+        m_overlay_plane->format = fourcc;
+      }
+      else if(m_overlay_plane->plane->formats[i] == DRM_FORMAT_ARGB8888)
+      {
+        fourcc = DRM_FORMAT_ARGB8888;
+        m_overlay_plane->format = fourcc;
+        break;
+      }
     }
-    else if(m_overlay_plane->plane->formats[i] == DRM_FORMAT_ARGB8888)
+
+    if (fourcc == 0)
     {
-      fourcc = DRM_FORMAT_ARGB8888;
-      m_overlay_plane->format = fourcc;
-      break;
+      CLog::Log(LOGERROR, "CDRMUtils::%s - could not find a suitable overlay plane format", __FUNCTION__);
+      return false;
     }
-  }
 
-  if (fourcc == 0)
+    CLog::Log(LOGDEBUG, "CDRMUtils::%s - overlay plane format: %c%c%c%c", __FUNCTION__, fourcc, fourcc >> 8, fourcc >> 16, fourcc >> 24);
+  }
+  else
   {
-    CLog::Log(LOGERROR, "CDRMUtils::%s - could not find a suitable overlay plane format", __FUNCTION__);
-    return false;
+    memset(m_overlay_plane, 0, sizeof(plane));
   }
-
-  CLog::Log(LOGDEBUG, "CDRMUtils::%s - overlay plane format: %c%c%c%c", __FUNCTION__, fourcc, fourcc >> 8, fourcc >> 16, fourcc >> 24);
-
   return true;
 }
 
@@ -439,6 +445,7 @@ bool CDRMUtils::OpenDrm()
     "vc4",
     "virtio_gpu",
     "sun4i-drm",
+    "meson"
   };
 
   for(int i = 0; i < 10; ++i)
